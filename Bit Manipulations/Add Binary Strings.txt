Q. Add Binary Strings

Problem Description
Given two binary strings A and B. Return their sum (also a binary string).
Problem Constraints
1 <= length of A <= 105
1 <= length of B <= 105
A and B are binary strings

Input Format
The two argument A and B are binary strings.

Output Format
Return a binary string denoting the sum of A and B

Example Input
Input 1:
A = "100"
B = "11"
Input 2:
A = "110"
B = "10"

Example Output
Output 1:
"111"
Output 2:
"1000"

Example Explanation
For Input 1:
The sum of 100 and 11 is 111.
For Input 2:
 
The sum of 110 and 10 is 1000.

--------------------------------------------------------------------------------------------------

Solution code: (C#)

using System.Text;

class Solution {
    public string addBinary(string A, string B) {
        int nA = A.Length, nB = B.Length;
        int i = nA - 1, j = nB - 1;
        int sum = 0, carry = 0;

        StringBuilder res = new StringBuilder();

        while(i >=0 || j >= 0){
            if(i >= 0){
                sum += A[i] - '0'; //add i'th place's digit to sum until length is over
            }

            if(j >= 0){
                sum += B[j] - '0'; //add j'th place's sum until its length =0
            }

            if(carry != 0){
                sum += carry; //add carry
            }

            res.Append((sum % 2));   // append sum%2 E.g. 1%2=1 || 0%2==0 || *imp* 2%2=0
            carry = sum / 2;         // and carry if sum = 1+1 =2 i.e carry = 2/2=1
            i--; j--;
            sum = 0;
        }

        if(carry != 0) res = res.Append(1);  //after last digit if carry is there then append it.

        StringBuilder res2 = new StringBuilder();
        for(int k=res.Length- 1; k >= 0; k--)
        { 
            res2.Append(res[k]);   //reverse because we appended in reverse order;
        }

        return res2.ToString();
    }
}

/// N is length of larger input string
/// TC = atmost we are iterating the string 2 times = O(N)
/// SC = extra space for StringBuilder = O(N)