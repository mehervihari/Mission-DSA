Q. Special Integer

Problem Description
Given an array of integers A and an integer B, 
find and return the maximum value K such that there is no subarray in A of size K with the sum of elements greater than B.

Problem Constraints
1 <= |A| <= 100000
1 <= A[i] <= 10^9

1 <= B <= 10^9

Input Format
The first argument given is the integer array A.
The second argument given is integer B.

Output Format
Return the maximum value of K (sub array length).

Example Input
Input 1:
A = [1, 2, 3, 4, 5]
B = 10
Input 2:
A = [5, 17, 100, 11]
B = 130

Example Output
Output 1:
 2
Output 2:
 3

Example Explanation
Explanation 1:
Constraints are satisfied for maximal value of 2.
Explanation 2:
Constraints are satisfied for maximal value of 3.

-----------------------------------------------------------------------------------------------------------------------------------

public class Solution {
    public int solve(int[] a, int b) {
        int n = a.length; int maxk = 0; int low = 0, high = n;
        // binary search over window size (K)
        while(low <= high)
        {
            int k = low + (high - low)/2;
            // check if current K is valid window size?
            if(isValid(a, k, b)) {
                low = k + 1;
            }
            else high = k - 1;
        }
        return low - 1;        
    }

    public boolean isValid(int[] a, int k, int b)
    {
        int n = a.length;
        int sum = 0;
        for(int i=0; i <= n-1; i++)
        {
            //add current item
            sum += a[i];
            //get rid of the leftmost item that just got out of the window
            if(i >= k) sum -= a[i-k];
            if(sum > b) return false;
        }
        return true;
    }
}

/// n is input array size
/// TC: O(n log n), SC: O(1);
