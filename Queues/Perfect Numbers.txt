Q. Perfect Numbers

Problem Description
Given an integer A, you have to find the Ath Perfect Number.
A Perfect Number has the following properties:
It comprises only 1 and 2.
The number of digits in a Perfect number is even.
It is a palindrome number.
For example, 11, 22, 112211 are Perfect numbers, where 123, 121, 782, 1 are not.

Problem Constraints
1 <= A <= 100000

Input Format
The only argument given is an integer A.

Output Format
Return a string that denotes the Ath Perfect Number.

Example Input
Input 1:
 A = 2
Input 2:
 A = 3

Example Output
Output 1:
 22
Output 2:
 1111

Example Explanation
Explanation 1:
First four perfect numbers are:
1. 11
2. 22
3. 1111
4. 1221

Explanation 2:
First four perfect numbers are:
1. 11
2. 22
3. 1111
4. 1221
---------------------------------------------------------------------------------------------------------------------------------
Solution code: //JAVA
public class Solution {
    public String solve(int a) {
        // Queue is an Interface that extends Collections Interface and implements LinkedList Class
        Queue<String> q = new LinkedList<>();
        // initialze the Queue
        q.add("11");
        q.add("22");

        int size = 2;
        while(a-- > 1)
        {
            // create the palindrome strings that can be formed using front (1st) element of the Queue and add them to Queue and
            // also remove that front element because everytime the fromt element has to be differnet
            String str = q.remove();
            int len = str.length();
            
            q.add(str.substring(0, len/2) + "11" + str.substring(len/2, len));
            q.add(str.substring(0, len/2) + "22" + str.substring(len/2, len));
            size += 2;
        }

        // front (1st) element of the Queue will be the answer
        return q.remove();
    }
}

/// A is the input given
/// TC = seems to be = looping for A times (depth of tree) = O(A)
/// SC = (maybe) space occupied in each tree level = 2 + 4 + 8 + ..... = O(2^N)
