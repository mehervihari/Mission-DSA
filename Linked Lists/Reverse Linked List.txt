Q. Reverse Linked List

Problem Description
You are given a singly linked list having head node A. You have to reverse the linked list and return the head node of that reversed list.
NOTE: You have to do it in-place and in one-pass.

Problem Constraints
1 <= Length of linked list <= 105
Value of each node is within the range of a 32-bit integer.

Input Format
First and only argument is a linked-list node A.

Output Format
Return a linked-list node denoting the head of the reversed linked list.
--------------------------------------------------------------------------------------------------------------------------------------------------
Solution code:
// function to reverse the given LL
public void reverseLL(ListNode a) 
    {
        // set current node, previous node inorder to reverse the LL
        ListNode prev = null, curr = a, temp = a;
        while(temp.next != null)
        {
            temp = temp.next;
            // current node should point to the previous node
            curr.next = prev;
            // update current node, previous node
            prev = curr;
            curr = temp;
        }
        curr.next = prev;
    }

/// TC = time to reverse LL = O(size of LL) = O(n)
/// SC= no extra space = O(1)